SELECT * FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK18;

CREATE OR REPLACE FUNCTION STANDARDISE_STR(s STRING)
RETURNS STRING
COMMENT = 'Casts string to upper case, remove non-alphanumeric characters and trailing white spaces'
AS $$SELECT REGEXP_REPLACE(UPPER(TRIM(S)), '[^a-z0-9]', '')$$;

CREATE OR REPLACE FUNCTION NORMARLISE_ED_DIST(a STRING, b STRING)
RETURNS NUMBER
COMMENT = 'Normalises the score of edit distance'
AS $$SELECT EDITDISTANCE(a, b)/GREATEST(LENGTH(a), LENGTH(b))$$;

WITH CITY_CTE AS(
SELECT CITY FROM (SELECT 'London' AS L, 'Manchester' AS M, 'Liverpool' AS LL) UNPIVOT(CITY FOR COL IN (L, M, LL))
),
CORRECTED_CITY AS(
SELECT CATEGORY, VALUE, CITY AS LOCATION, NUT_TYPE FROM(
SELECT *, NORMARLISE_ED_DIST(CITY, LOCATION) AS SCORE FROM CITY_CTE CROSS JOIN TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK18 WHERE SCORE < 0.5 AND SCORE != 0)
),
CLEANED_PD2023_WK18 AS(
SELECT * FROM CORRECTED_CITY UNION ALL
SELECT * exclude (CITY, SCORE) FROM(
SELECT *, NORMARLISE_ED_DIST(CITY, LOCATION) AS SCORE FROM CITY_CTE CROSS JOIN TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK18 WHERE SCORE= 0)
),
PIVOTED_PD2023_WK18 AS(
SELECT *, PRICE*QUANTITY AS REVENUE FROM CLEANED_PD2023_WK18 PIVOT(SUM(VALUE) FOR CATEGORY IN ('Price (£) per pack', 'Quant per Q', 'Weight (kg)')) AS p(LOCATION, NUT_TYPE, PRICE, QUANTITY, WEIGHT)
)
SELECT LOCATION AS "Location", SUM(REVENUE) AS "Revenue", AVG(PRICE) AS "Avg. Price (£) per pack" FROM PIVOTED_PD2023_WK18 GROUP BY LOCATION ORDER BY LOCATION;
